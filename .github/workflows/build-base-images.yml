name: Build Base Images

on:
  schedule:
    # Run every day at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      push_images:
        description: 'Push images to registry'
        required: false
        default: 'true'
        type: boolean
  workflow_call:
    inputs:
      push_images:
        description: 'Push images to registry'
        required: false
        default: true
        type: boolean

env:
  REGISTRY: ghcr.io
  IMAGE_PREFIX: ${{ github.repository_owner }}/mcp-

jobs:
  build-base-images:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      security-events: write
      actions: read
      attestations: write
      id-token: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - type: python
            context: servers/python/base
            dockerfile: servers/python/base/Dockerfile.python
            image: mcp-python-base
          - type: node
            context: servers/node/base
            dockerfile: servers/node/base/Dockerfile.node
            image: mcp-node-base
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Generate build timestamp
        id: timestamp
        run: echo "date=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT
          
      - name: Build and push ${{ matrix.type }} base image
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          tags: |
            ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ matrix.image }}:latest
            ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ matrix.image }}:nightly-${{ steps.timestamp.outputs.date }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: ${{ github.event_name == 'push' || github.event_name == 'schedule' || (github.event_name == 'workflow_dispatch' && inputs.push_images != 'false') }}
          
      - name: Run Trivy vulnerability scanner
        if: ${{ github.event_name == 'push' || github.event_name == 'schedule' || (github.event_name == 'workflow_dispatch' && inputs.push_images != 'false') }}
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ matrix.image }}:latest
          scan-type: 'image'
          format: 'sarif'
          output: 'trivy-results-${{ matrix.type }}.sarif'
          severity: 'CRITICAL,HIGH'
          ignore-unfixed: true
          
      - name: Upload Trivy scan results to GitHub Security tab
        if: ${{ github.event_name == 'push' || github.event_name == 'schedule' || (github.event_name == 'workflow_dispatch' && inputs.push_images != 'false') }}
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results-${{ matrix.type }}.sarif'
          category: 'base-image-${{ matrix.type }}'

