name: Build Registry Image

on:
  push:
    branches: [main]
    paths:
      - 'servers/registry.json'
      - 'servers/registry/Dockerfile'
      - '.github/workflows/build-registry.yml'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/mcp-servers-registry

jobs:
  build-registry:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value={{date 'YYYYMMDD'}},enable={{is_default_branch}}
          
      - name: Get registry version
        id: version
        run: |
          VERSION=$(jq -r '.version' servers/registry.json)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Registry version: $VERSION"
          
      - name: Build and push registry image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: servers
          file: servers/registry/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ steps.meta.outputs.tags }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:v${{ steps.version.outputs.version }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: |
            org.opencontainers.image.description=MCP Servers Registry v${{ steps.version.outputs.version }}
            
      - name: Generate attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true