# Build stage for installing uv
FROM python:3.13-alpine AS builder

# Install build dependencies
RUN apk add --no-cache curl ca-certificates

# Install uv
RUN curl -LsSf https://astral.sh/uv/install.sh | sh

# Upgrade pip and setuptools to fix security vulnerabilities
RUN python -m pip install --upgrade pip setuptools>=78.1.1

# Final stage
FROM python:3.13-alpine

# Install only runtime dependencies
RUN apk add --no-cache ca-certificates

# Upgrade pip and setuptools to fix security vulnerabilities (CVE-2024-6345, CVE-2025-47273)
RUN python -m pip install --upgrade pip setuptools>=78.1.1

# Create non-root user in a single layer
RUN addgroup -g 1001 -S python && \
    adduser -u 1001 -S python -G python

# Copy uv from builder stage
COPY --from=builder /root/.local /home/python/.local
RUN chown -R python:python /home/python/.local

# Switch to non-root user
USER python
ENV PATH="/home/python/.local/bin:${PATH}"

# Create app directory
WORKDIR /app

# Set up MCP server environment
ENV MCP_PORT=3000
ENV PYTHONUNBUFFERED=1

# Expose MCP port
EXPOSE 3000

# Add healthcheck using wget (lighter than Python)
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:3000 || exit 1

# Default command (will be overridden by specific servers)
CMD ["python", "-m", "http.server", "3000"]